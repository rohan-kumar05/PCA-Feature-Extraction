# -*- coding: utf-8 -*-
"""feature extraction(PCA).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y7q-ICd6McnPlhoF5ZVrGS-9wUkpUo0v
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import sklearn

from google.colab import drive
drive.mount('/content/drive')

from sklearn.datasets import load_digits

df = load_digits()
df

df.data[0]

sns.heatmap(df.data)
plt.show()

np.unique(df.target)

df1 = pd.DataFrame(df.data, columns=df.feature_names)
df1.head()

df1.describe()

X = df1
y = df.target

y

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
X_scaled

X.shape

from sklearn.decomposition import PCA

pca = PCA(0.9)

X_pca = pca.fit_transform(X)
X_pca.shape

pca.explained_variance_ratio_

pca.n_components_

pca.get_feature_names_out()

#TSNE
from sklearn.manifold import TSNE
n_components = 2
perplexity = 30

tsne = TSNE(n_components=n_components, perplexity=perplexity, random_state=0)
X_tsne = tsne.fit_transform(X)

plt.figure(figsize=(8, 6))
plt.scatter(X_tsne[:, 0], X_tsne[:, 1], c=df.target, cmap=plt.cm.get_cmap("nipy_spectral", 10))
plt.colorbar(label="Digit Label")
plt.title("t-SNE Projection of Digits Dataset")
plt.show()







